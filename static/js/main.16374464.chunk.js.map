{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","removeGood","filter","innerGood","clearAllGoods","showSelectedGoods","length","slice","join","this","className","map","isSelected","find","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,I,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAJ,GACZ,MAAO,CACLC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAK9CE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAAAJ,GACZ,MAAO,CACLC,cAAeD,EAAMC,cAAcK,QAAO,SAAAC,GAAS,OAAIA,IAAcJ,U,EAK3EK,cAAgB,WACd,EAAKJ,SACH,CACEH,cAAe,M,EAKrBQ,kBAAoB,WAClB,IAAQR,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUT,EAAc,GAAxB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcU,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDX,EAAcU,OAAO,GAA5E,mB,4CAIN,WAAU,IAAD,OACCV,EAAkBY,KAAKb,MAAvBC,cAER,OACE,sBAAKa,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BD,KAAKJ,sBAE/B,oBAAIK,UAAU,OAAd,SACGhB,EAAgBiB,KAAI,SAAAZ,GACnB,IAAMa,EAAaf,EAAcgB,MAAK,SAAAV,GAAS,OAAIA,IAAcJ,KAEjE,OACE,qBAEEW,UACEE,EACI,8BACA,aALR,UAQGb,EAED,wBACEW,UAAU,YACVI,KAAK,SACLC,QACElB,EAAcgB,MAAK,SAAAV,GAAS,OAAIA,IAAcJ,KAC1C,kBAAM,EAAKE,WAAWF,IACtB,kBAAM,EAAKD,QAAQC,IAN3B,SASGa,EAAa,SAAW,UAlBtBb,QAyBZF,EAAcS,OAAS,GACtB,wBAAQI,UAAU,YAAYI,KAAK,SAASC,QAASN,KAAKL,cAA1D,yC,GAnFQY,IAAMC,WA4FTtB,IC7GfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.16374464.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[],\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  addGood = (good: string) => {\n    this.setState(state => {\n      return {\n        selectedGoods: [...state.selectedGoods, good],\n      };\n    });\n  };\n\n  removeGood = (good: string) => {\n    this.setState(state => {\n      return {\n        selectedGoods: state.selectedGoods.filter(innerGood => innerGood !== good),\n      };\n    });\n  };\n\n  clearAllGoods = () => {\n    this.setState(\n      {\n        selectedGoods: [],\n      },\n    );\n  };\n\n  showSelectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"selected\">{this.showSelectedGoods()}</h1>\n\n        <ul className=\"list\">\n          {goodsFromServer.map(good => {\n            const isSelected = selectedGoods.find(innerGood => innerGood === good);\n\n            return (\n              <li\n                key={good}\n                className={\n                  isSelected\n                    ? 'list__item list__item-green'\n                    : 'list__item'\n                }\n              >\n                {good}\n\n                <button\n                  className=\"list__btn\"\n                  type=\"button\"\n                  onClick={\n                    selectedGoods.find(innerGood => innerGood === good)\n                      ? () => this.removeGood(good)\n                      : () => this.addGood(good)\n                  }\n                >\n                  {isSelected ? 'Remove' : 'Add'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        {selectedGoods.length > 0 && (\n          <button className=\"btn-clear\" type=\"button\" onClick={this.clearAllGoods}>\n            Clear all selections\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}